#name: ""
#Version: ""
#replicaCount: 2
#namespaceOverride: aslkdjasdvc

generalInfo:
  name: some-application
  namespace: application-namespace
  labels: 
    app.kubernetes.io/name: some-application
    app.kubernetes.io/version: v1
    app.kubernetes.io/env: dev
    app.kubernetes.io/managed-by: helm

deployment:
  replicas: 2
  historyLimit: 11
  imageName: nginx
  imagerepository: docker.io
  imageTag: stable
  containerPort: 8080
  affinity: {}
  tolerations: []
  nodeSelector: {}
  livenessProbe: 
    failureThreshold: 10
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 60
    timeoutSeconds: 30
  readinessProbe:
    httpGet:
      path: /
      port: 80
  imagePullPolicy:
  restartPolicy: "OnFailure"
  volumeMounts: []
  volume: {}
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "128Mi"
      cpu: "500m"


service:
  type: NodePort
  ports:
    - name: some-application-1
      port: 83
      targetPort: 80
      protocol: TCP
    - name: some-application-2
      port: 84
      targetPort: 80
      protocol: TCP


ingress: 
  enabled: true
  path: /page1
  hosts: 
    - host: example.local
      # paths: 
      #   - path: /page1
      #     backend:
      #       service:
      #         name: some-application-1
      #         port:
      #           name: http
      #           number: 83
      #   - path: /page2
      #     backend:
      #       service:
      #         name: some-application-2
      #         port:
      #           name: http
      #           number: 84

  annotations:
    kubernetes.io/ingress.class: nginx
    app.kubernetes.io/service-name: some-getaway
    app.kubernetes.io/version: v1
    app.kubernetes.io/env: dev
    app.kubernetes.io/managed-by: azure
  tls: []


configmap:
  name: some-application-configmap
  pathtofile: dev-appsettings.json
  # data: |-
  #     {
  #       "ConnectionStrings": {
  #         "VbsDb": "Server=some-cascasaconnection-string"
  #       },
  #       "Logging": {
  #         "LogLevel": {
  #           "Default": "Information",
  #           "Microsoft": "Warning",
  #           "Microsoft.Hosting.Lifetime": "Information"
  #         }
  #       },
  #       "AllowedHosts": "*"
  #     }
  
