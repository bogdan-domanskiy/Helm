apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ .Values.generalInfo.name | default .Release.Name }}-deployment
  namespace: {{ .Values.generalInfo.namespace | default "default" }}
  labels:
    version: "{{ .Values.generalInfo.version | default .Chart.Version .Release.Revision }}"
spec:
  replicas: {{ .Values.deployment.replicas | default 1 }}
  revisionHistoryLimit: {{ .Values.deployment.historyLimit | default 10 }}
  selector:
    matchLabels:  
      name: {{ .Values.generalInfo.name | default .Release.Name }}-pod
  strategy:
  #  type: RollingUpdate (By default)
    # type: Recreate
  template:
    metadata:
      labels:
        name: {{ .Values.generalInfo.name | default .Release.Name }}-pod
    spec:
      # serviceAccountName: {{ .Values.generalInfo.name | default .Release.Name }}-svcan
      # secucityContext:
      #   fsGroup: 472
      #   runAsGroup: 472
      #   runAsUser: 472
      containers:
        - name: {{ .Values.generalInfo.name | default .Release.Name }}-pod
          image: "{{ .Values.deployment.imageName }}{{ .Values.deployment.imageTag | default "" }}"
          # volumeMounts:
          #   - name: config
          #     mountPath: "/etc/grafana/grafana.ini"
          #     subPath: grafana.ini
          #   - name: storage
          #     mountPath: "/var/lib/grafana"            
          ports:
            - name: web
              containerPort: 80
              protocol: TCP
# define all of the ConfigMap's data as container environment variables
          envFrom:
            - configMapRef:
                name: {{ .Values.generalInfo.name }}-configmap
          # env:
          #   - name: GF_SECURITY_ADMIN_USER
          #     valueFrom:
          #       secretKeyRef:
          #         name: grafana
          #         key: admin-user
          #   - name: GF_SECURITY_ADMIN_PASSWORD
          #     valueFrom:
          #       secretKeyRef:
          #         name: grafana
          #         key: admin-password
          # - name: GREETING
          #   valueFrom:
          #     configMapKeyRef:
          #       name: demo-config
          #       key: greeting
# This field should be disabled by default
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            {}
          # requests:
          #   memory: "64Mi"
          #   cpu: "250m"
          # limits:
          #   memory: "128Mi"
          #   cpu: "500m"
      # volumes:
      # - name: config
      #   configMap:
      #     name: grafana
      # - name: storage
      #   emptyDir: {}
