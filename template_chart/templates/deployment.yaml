{{ $ports := .Values.service.ports }}
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ .Values.generalInfo.name | default .Release.Name }}-deployment
  namespace: {{ .Values.generalInfo.namespace | default "default" }}
  labels:
    {{- range $key, $val := .Values.generalInfo.labels -}}
      {{- $key | nindent 4 }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.deployment.replicas | default 1 }}
  revisionHistoryLimit: {{ .Values.deployment.historyLimit | default 10 }}
  selector:
    matchLabels:
      name: {{ .Values.generalInfo.name | default .Release.Name }}-pod
    {{- if .Values.deployment.matchExpressions }}
    matchExpressions:
    {{- toYaml .Values.deployment.matchExpressions | nindent 6 }}
    {{- end }}
  strategy:
  {{- if .Values.deployment.deploymentStrategy }}
    {{- if eq .Values.deployment.deploymentStrategy "RollingUpdate" -}}
    type: {{ .Values.deployment.deploymentStrategy }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.maxSurge | default 2 }}
      maxUnavailable: {{ .Values.deployment.maxUnavailable | default 0 }}
    {{- else }}
    type: {{ .Values.deployment.deploymentStrategy }}
    {{- end -}}
  {{- else }}
    type: RollingUpdate
  {{- end }}
  template:
    metadata:
      name: {{ .Values.generalInfo.name | default .Release.Name }}-pod
      namespace: {{ .Values.generalInfo.namespace | default "default" }}
      labels:
        name: {{ .Values.generalInfo.name | default .Release.Name }}-pod
    spec:
      {{- if .Values.deployment.affinity -}}
      affinity:
        {{- toYaml | nindent 10 }}
      {{- end }}
      {{- if .Values.deployment.schedulerName }}
      schedulerName: {{ .Values.deployment.schedulerName }}
      {{- end }}
      {{- if .Values.deployment.priorityClassName }}
      priorityClassName: {{ .Values.deployment.priorityClassName }}
      {{- end }}
      {{- if .Values.deployment.initContainers }}
      initContainers: 
        {{ toYaml .Values.deployment.initContainers | nindent 8}}
      {{- end }}
      containers:
      - name: {{ .Values.generalInfo.name | default .Release.Name }}-pod
        image: {{ ( include "deploy.image-name" .) | quote }}
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy | default "IfNotPresent" }}
        volumeMounts: 
          {{- toYaml .Values.deployment.volumeMounts | nindent 10}}
        ports:
        {{- if $ports }}
          {{- range $ports }}
          - name: {{ .name }}
            containerPort: {{ .targetPort }}
            protocol: {{ .protocol }}
          {{- end }}
        {{- else }}
          - name: http
            containerPort: {{ .Values.deployment.containerPort | default "80" }}
            protocol: TCP
        {{- end }}
# define all of the ConfigMap's data as container environment variables
        envFrom:
          {{- toYaml .Values.deployment.envFrom | nindent 10 }}
        env:
          {{- toYaml .Values.deployment.env | nindent 10 }}
        livenessProbe:
          {{- toYaml .Values.deployment.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.deployment.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10 }}
      tolerations:
        {{- toYaml .Values.deployment.tolerations | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      volumes:
        {{- toYaml .Values.deployment.volumes | nindent 8 }}

